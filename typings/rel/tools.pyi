"""
This type stub file was generated by pyright.
"""

"""
This module contains a single tool (Timer) and a
CLI wrapper (timerCLI()).

### Timer
Timer's start() function contains basic usage examples
of the timeout(), signal(), and dispatch() functions:

    def start(self):
        self.count = 0
        notice("starting countdown to %s"%(self.goal,))
        rel.timeout(1, self.update)
        rel.signal(2, self.stop)
        rel.dispatch()

Similarly, Timer.stop() triggers rel.abort().

### timerCLI
This function contains an example of rel initialization,
which is optional, but may be used to specify particular
settings:

    if options.verbose:
        rel.initialize(options=["verbose"])

### usage

    rtimer [seconds] [minutes] [hours] [update_increment]

All arguments default to zero. So:

    rtimer 15 30 2 60

means run for 15 seconds, 30 minutes, and 2 hours, printing
a notice every 60 seconds.

    rtimer 0 5

means run for 5 minutes, printing no incremental updates.

When the time runs out, a sound will play on two conditions:
there is a readable file at the specified path (configurable
via the -m flag, with default: /var/local/rtimer_elapsed.mp3),
and mplayer is installed.
"""
def notice(*lines): # -> None:
    ...

def exit(): # -> None:
    ...

def error(msg, *lines): # -> None:
    ...

RT_MP3 = ...
RT_USAGE = ...
class Timer:
    def __init__(self, s, m, h, interval=..., mp3=...) -> None:
        ...
    
    def start(self): # -> None:
        ...
    
    def stop(self): # -> None:
        ...
    
    def update(self): # -> Literal[True]:
        ...
    
    def alarm(self): # -> None:
        ...
    


def timerCLI(): # -> None:
    ...

